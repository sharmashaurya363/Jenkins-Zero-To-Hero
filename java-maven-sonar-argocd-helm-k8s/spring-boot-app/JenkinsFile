pipeline {
  agent { node { label 'jenkins-1' } }
  stages {
    stage('Remove Old Containers') {
      steps {
      sh 'docker rm -f $(docker ps -aq)'
      }
    }
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/sharmashaurya363/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test Artifacts') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd /home/bhavukm/spring-boot-app && mvn clean package'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sharmashaurya363/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd /home/bhavukm/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Deploy') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "sharmashaurya363"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "sharmashaurya363@gmail.com"
                    git config user.name "Shaurya Sharma"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    docker run -d -p 8081:8080 sharmashaurya363/ultimate-cicd:${BUILD_NUMBER}
                '''
            }
        }
}
}
}
